"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 4.2.17.
"""

from pathlib import Path
import os
import dj_database_url

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-6_wbt7$jbj3)ruxoho@_he0szi%7#$@7ybjj32r!a1g=0itof5'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
AUTH_USER_MODEL = 'accounts.CustomUser'

ALLOWED_HOSTS = ['localhost', '127.0.0.1']  # Añade dominios permitidos aquí

# Tenant configuration
# Configuración adicional para django-tenants
TENANT_MODEL = "stores.Store"
TENANT_DOMAIN_MODEL = "stores.Domain"

# Esquema público por defecto
PUBLIC_SCHEMA_NAME = 'public'

# Application definition
SHARED_APPS = [
    'django_tenants',  # Siempre debe ser la primera
    'django.contrib.contenttypes',
    'django.contrib.auth',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.admin',
    # Apps compartidas entre los tenants
    'accounts',
    'stores',
]

TENANT_APPS = [
    # Apps específicas de cada tenant
    'products',
    'orders',
]

INSTALLED_APPS = SHARED_APPS + TENANT_APPS

MIDDLEWARE = [
    'django_tenants.middleware.main.TenantMainMiddleware',  # Middleware de django-tenants
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'

# Database configuration
DATABASES = {
    'default': {
        'ENGINE': 'django_tenants.postgresql_backend',  # Cambia esta línea
        'NAME': 'store_db',
        'USER': 'store_user',
        'PASSWORD': 'store_password',
        'HOST': 'db',
        'PORT': '5432',
    }
}

# Agrega soporte para django_tenants en el router de bases de datos
DATABASE_ROUTERS = ('django_tenants.routers.TenantSyncRouter',)

# Password validation
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True

# Static files (CSS, JavaScript, Images)
STATIC_URL = '/static/'

# Default primary key field type
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
